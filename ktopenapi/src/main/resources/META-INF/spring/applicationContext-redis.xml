<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns='http://www.springframework.org/schema/beans'
        xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
        xmlns:context='http://www.springframework.org/schema/context'
        xmlns:c='http://www.springframework.org/schema/c'
        xmlns:p='http://www.springframework.org/schema/p'
        xmlns:cache='http://www.springframework.org/schema/cache'
        xsi:schemaLocation='
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd'>

    <context:property-placeholder location="classpath*:META-INF/base.properties" />
    <!--
    &lt;!&ndash; 用于两次动作间隔时间的reids &ndash;&gt;
    <bean id="jedisPoolConfigInternal" class="redis.clients.jedis.JedisPoolConfig"
          p:maxTotal="${redis.internal.maxTotal}" p:maxIdle="${redis.internal.maxIdle}"
          p:maxWaitMillis="${redis.internal.maxWaitMillis}" p:testOnBorrow="true"/>
    <bean id="jedisConnectionFactoryInternal" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.internal.hostName}" p:port="${redis.internal.port}" p:usePool="true" p:poolConfig-ref="jedisPoolConfigInternal"/>
    <bean id="redisTemplateInternal" class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactoryInternal"/>

    &lt;!&ndash; 用于每日限制积分的reids &ndash;&gt;
    <bean id="jedisPoolConfigDaily" class="redis.clients.jedis.JedisPoolConfig"
          p:maxTotal="${redis.daily.maxTotal}" p:maxIdle="${redis.daily.maxIdle}"
          p:maxWaitMillis="${redis.daily.maxWaitMillis}" p:testOnBorrow="true"/>
    <bean id="jedisConnectionFactoryDaily" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.daily.hostName}" p:port="${redis.daily.port}" p:usePool="true" p:poolConfig-ref="jedisPoolConfigDaily"/>
    <bean id="redisTemplateDaily" class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactoryDaily"/>

    &lt;!&ndash; 用于首次积分、连续登录、连续三天的reids &ndash;&gt;
    <bean id="jedisPoolConfigFirst" class="redis.clients.jedis.JedisPoolConfig"
          p:maxTotal="${redis.first.maxTotal}" p:maxIdle="${redis.first.maxIdle}"
          p:maxWaitMillis="${redis.first.maxWaitMillis}" p:testOnBorrow="true"/>
    <bean id="jedisConnectionFactoryFirst" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.first.hostName}" p:port="${redis.first.port}" p:usePool="true" p:poolConfig-ref="jedisPoolConfigFirst"/>
    <bean id="redisTemplateFirst" class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactoryFirst"/>-->

<!--    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactory"/>
     declare Redis Cache Manager
    <bean id='cacheManager' class='org.springframework.data.redis.cache.RedisCacheManager'
          c:template-ref='redisTemplate'/>
    <cache:annotation-driven />-->

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxTotal}" />
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="minIdle" value="${redis.minIdle}"/>
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>
    <beans profile="develop">
        <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
            <constructor-arg index="0" ref="jedisPoolConfig" />
            <constructor-arg index="1" value="${redis.develop.host}" />
            <constructor-arg index="2" value="${redis.develop.port}" />
        </bean>
        <bean id="redisSentinelTemplate" class="org.kunteng.ktopenapi.core.redis.JedisSentinelTemplate">
            <property name="jedisPool" ref="jedisPool"/>
        </bean>
        <bean id="redisSentinelTemplate2" class="org.kunteng.ktopenapi.core.redis.JedisSentinelTemplate">
            <property name="jedisPool" ref="jedisPool"/>
        </bean>
    </beans>
    <beans profile="deploy">
        <bean id="redisSentinelPool0" class="redis.clients.jedis.JedisSentinelPool">
            <constructor-arg index="0" value="${redis.deploy.sentinel0.masterName}" />
            <constructor-arg index="1">
                <set>
                    <value>${redis.deploy.sentinel0}</value>
                </set>
            </constructor-arg>
            <constructor-arg index="2" ref="jedisPoolConfig"/>
        </bean>

        <bean id="redisSentinelPool1" class="redis.clients.jedis.JedisSentinelPool">
            <constructor-arg index="0" value="${redis.deploy.sentinel1.masterName}" />
            <constructor-arg index="1">
                <set>
                    <value>${redis.deploy.sentinel1}</value>
                </set>
            </constructor-arg>
            <constructor-arg index="2" ref="jedisPoolConfig"/>
        </bean>
        <bean id="redisSentinelTemplate" class="org.kunteng.ktopenapi.core.redis.JedisSentinelTemplate">
            <property name="jedisPool" ref="redisSentinelPool1"/>
            <!--<property name="jedisPool" ref="jedisPool"/>-->
        </bean>
        <bean id="redisSentinelTemplate2" class="org.kunteng.ktopenapi.core.redis.JedisSentinelTemplate">
            <property name="jedisPool" ref="redisSentinelPool0"/>
            <!--<property name="jedisPool" ref="jedisPool"/>-->
        </bean>
    </beans>
</beans>