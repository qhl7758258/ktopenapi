<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-4.0.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd">

    <context:property-placeholder location="classpath*:META-INF/base.properties" />
    <context:spring-configured/>
    <context:component-scan base-package="org.kunteng.ktopenapi">
        <context:exclude-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
        <context:exclude-filter expression="org.springframework.web.bind.annotation.ControllerAdvice" type="annotation"/>
    </context:component-scan>
    <!-- MYSQL配置数据源 -->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"-->
          <!--p:driverClassName="${jdbc.driverClassName}"-->
          <!--p:url="${jdbc.url}"-->
          <!--p:username="${jdbc.username}"-->
          <!--p:password="${jdbc.password}"-->
          <!--p:testOnBorrow="true"-->
          <!--p:testOnReturn="true"-->
          <!--p:testWhileIdle="true"-->
          <!--p:timeBetweenEvictionRunsMillis="1800000"-->
          <!--p:numTestsPerEvictionRun="3"-->
          <!--p:minEvictableIdleTimeMillis="1800000"-->
          <!--p:validationQuery="SELECT 1 FROM DUAL" />-->
    <!-- ORACLE配置数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
    p:driverClassName="${jdbc.driverClassName}"
    p:url="${jdbc.url}"
    p:username="${jdbc.username}"
    p:password="${jdbc.password}"
    p:initialSize="${jdbc.initialSize}"
    p:maxActive="${jdbc.maxActive}"
    p:maxIdle="${jdbc.maxIdle}"
    p:minIdle="${jdbc.minIdle}"
    p:maxWait="${jdbc.maxWait}"
    p:validationQuery="${jdbc.validationQuery}"/>
    <!-- 配置业务数据MEMCACHED缓存 -->
    <!-- <bean id="ussdMemcachedClient" class="net.spy.memcached.spring.MemcachedClientFactoryBean">
        <property name="servers" value="${cache.common.ussd.ip.port}"/>
        <property name="protocol" value="TEXT"/>
        <property name="transcoder">
            <bean class="net.spy.memcached.transcoders.SerializingTranscoder">
                <property name="compressionThreshold" value="1024"/>
            </bean>
        </property>
        <property name="opTimeout" value="1000"/>
        <property name="timeoutExceptionThreshold" value="1998"/>
        <property name="hashAlg" value="KETAMA_HASH"/>
        <property name="hashAlg">
            <value type="net.spy.memcached.DefaultHashAlgorithm">KETAMA_HASH</value>
        </property>
        <property name="locatorType" value="CONSISTENT"/>
        <property name="failureMode" value="Redistribute"/>
        <property name="useNagleAlgorithm" value="false"/>
    </bean> -->
    <!-- 配置用户对象数据MEMCACHED缓存-->
   <!--  <bean id="userMemcachedClient" class="net.spy.memcached.spring.MemcachedClientFactoryBean">
        <property name="servers" value="${cache.common.user.ip.port}"/>
        <property name="protocol" value="TEXT"/>
        <property name="transcoder">
            <bean class="net.spy.memcached.transcoders.SerializingTranscoder">
                <property name="compressionThreshold" value="1024"/>
            </bean>
        </property>
        <property name="opTimeout" value="1000"/>
        <property name="timeoutExceptionThreshold" value="1998"/>
        <property name="hashAlg" value="KETAMA_HASH"/>
        <property name="hashAlg">
            <value type="net.spy.memcached.DefaultHashAlgorithm">KETAMA_HASH</value>
        </property>
        <property name="locatorType" value="CONSISTENT"/>
        <property name="failureMode" value="Redistribute"/>
        <property name="useNagleAlgorithm" value="false"/>
    </bean> -->
    <!-- 配置JDBC模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <constructor-arg value="UTF-8" />
                </bean>
                <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>-->
    <!--  配置redis模板 -->
    <!--<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
          <!--p:hostName="server" p:port="6379" p:usePool="true" />-->
    <!--<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"  p:connectionFactory-ref="jedisConnectionFactory"/>-->

    <!--配置Spring AMQP-->
    <!--<bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.JsonMessageConverter"/>-->
    <!--<bean id="connectionFactory" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">-->
        <!--<constructor-arg value="${rabbitmq.host}"/>-->
        <!--<property name="port" value="${rabbitmq.port}"/>-->
        <!--<property name="username" value="${rabbitmq.username}"/>-->
        <!--<property name="password" value="${rabbitmq.password}"/>-->
        <!--<property name="channelCacheSize" value="${rabbitmq.channelCacheSize}"/>-->
    <!--</bean>-->
    <!--<bean id="amqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">-->
        <!--<property name="connectionFactory" ref="connectionFactory"/>-->
        <!--<property name="messageConverter" ref="jsonMessageConverter">-->
        <!--</property>-->
    <!--</bean>-->
    <!--<rabbit:admin connection-factory="connectionFactory"/>-->
    <!--<rabbit:queue name="imageQueue"/>-->
    <!--<rabbit:queue name="weiboQueue"/>-->
    <!--<rabbit:queue name="actionLogQueue"/>&lt;!&ndash;动态日志 &ndash;&gt;-->
    <!--<rabbit:queue name="auditLogQueue"/> &lt;!&ndash;审计日志 &ndash;&gt;-->
    <!--<rabbit:listener-container connection-factory="connectionFactory"-->
                               <!--acknowledge="auto"-->
                               <!--concurrency="6"-->
                               <!--error-handler="testCustomeRabbitMQErrorHandler"-->
                               <!--prefetch="1"-->
                               <!--transaction-size="1"-->
                               <!--requeue-rejected="false"-->
                               <!--message-converter="jsonMessageConverter"-->
                               <!--xmlns="http://www.springframework.org/schema/rabbit">-->
        <!--<rabbit:listener queues="imageQueue" ref="customeRabbitMQListener" method="processImageQueue" />-->
    <!--</rabbit:listener-container>-->
    <!--<rabbit:listener-container connection-factory="connectionFactory"-->
                               <!--acknowledge="auto"-->
                               <!--concurrency="3"-->
                               <!--error-handler="testCustomeRabbitMQErrorHandler"-->
                               <!--prefetch="1"-->
                               <!--transaction-size="1"-->
                               <!--requeue-rejected="false"-->
                               <!--message-converter="jsonMessageConverter"-->
                               <!--xmlns="http://www.springframework.org/schema/rabbit">-->
        <!--<rabbit:listener queues="weiboQueue" ref="customeRabbitMQListener" method="processWeiboQueue"/>-->
    <!--</rabbit:listener-container>-->
    <!--<rabbit:listener-container connection-factory="connectionFactory"-->
                               <!--acknowledge="auto"-->
                               <!--concurrency="3"-->
                               <!--error-handler="testCustomeRabbitMQErrorHandler"-->
                               <!--prefetch="1"-->
                               <!--transaction-size="1"-->
                               <!--requeue-rejected="false"-->
                               <!--message-converter="jsonMessageConverter"-->
                               <!--xmlns="http://www.springframework.org/schema/rabbit">-->
        <!--<rabbit:listener queues="actionLogQueue" ref="customeRabbitMQListener" method="processLogQueue"/>-->
    <!--</rabbit:listener-container>-->
    <!--<rabbit:listener-container connection-factory="connectionFactory"-->
                               <!--acknowledge="auto"-->
                               <!--concurrency="1"-->
                               <!--error-handler="testCustomeRabbitMQErrorHandler"-->
                               <!--prefetch="1"-->
                               <!--transaction-size="1"-->
                               <!--requeue-rejected="false"-->
                               <!--message-converter="jsonMessageConverter"-->
                               <!--xmlns="http://www.springframework.org/schema/rabbit">-->
        <!--<rabbit:listener queues="auditLogQueue" ref="customeRabbitMQListener" method="processLogQueue"/>-->
    <!--</rabbit:listener-container>-->
    <!--<bean id="rabbitTxManager"-->
          <!--class="org.springframework.amqp.rabbit.transaction.RabbitTransactionManager">-->
        <!--<property name="connectionFactory" ref="connectionFactory"/>-->
    <!--</bean>-->

</beans>
